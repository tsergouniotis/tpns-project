<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://www.oracle.com/webfolder/technetwork/jsc/xml/ns/persistence/orm_2_1.xsd"
	version="2.1">

	<persistence-unit-metadata>
		<xml-mapping-metadata-complete />
		<persistence-unit-defaults>
			<cascade-persist />
		</persistence-unit-defaults>
	</persistence-unit-metadata>


	<entity class="com.tpns.article.domain.Article" name="Article" cacheable="true">
		<table name="articles" />
		<named-query name="Article.findByStatus">
			<query>select a from Article a where a.status=:status</query>
		</named-query>
		<named-query name="Article.findByCategoryName">
			<query>select a from Article a join fetch a.category cat where cat.name=:categoryName</query>
		</named-query>
		<entity-listeners>
			<entity-listener class="com.tpns.article.repository.ArticleListener">
				<pre-persist method-name="prePersist" />
				<pre-update method-name="preUpdate" />
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="id" access="FIELD">
				<column name="article_id" />
				<generated-value strategy="SEQUENCE" generator="ARTICLESEQ" />
				<sequence-generator name="ARTICLESEQ"
					sequence-name="ARTICLESEQ" allocation-size="1" />
			</id>
			<basic name="subject">
				<column name="subject" length="255" />
			</basic>
			<basic name="shortDescription">
				<column name="short_description" length="512" />
			</basic>
			<basic name="content">
				<column name="content" length="8096" />
			</basic>
			<basic name="status">
				<column name="status" length="50" />
				<enumerated>STRING</enumerated>
			</basic>
			<basic name="author">
				<column name="author" />
			</basic>
			<basic name="createdAt">
				<column name="created_at" nullable="false" insertable="false"
					updatable="false" />
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="updatedAt">
				<column name="updated_at" />
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="postedAt">
				<column name="posted_at" />
				<temporal>TIMESTAMP</temporal>
			</basic>
			<version name="version" access="FIELD" />
			<many-to-one name="category" fetch="EAGER">
				<join-column name="category_id" />
			</many-to-one>
			<one-to-many name="audits" access="FIELD">
				<join-column name="article_id" />
			</one-to-many>
			<many-to-many name="keywords" fetch="LAZY">
				<join-table name="article_keywords">
					<join-column name="article_id" />
					<inverse-join-column name="keyword" />
				</join-table>
			</many-to-many>
			<many-to-many name="resources">
				<join-table name="article_resources">
					<join-column name="article_id"/>
					<inverse-join-column name="resource_id"/>
				</join-table>
			</many-to-many>
			<transient name="destinations" />
		</attributes>
	</entity>
	
	<entity class="com.tpns.article.domain.MediaResource" cacheable="true">
		<table name="resources"/>
		<attributes>
			<id name="id" access="FIELD">
				<column name="resource_id" />
				<generated-value strategy="SEQUENCE" generator="MEDIARESOURCESEQ" />
				<sequence-generator name="MEDIARESOURCESEQ"
					sequence-name="MEDIARESOURCESEQ" allocation-size="1" />
			</id>		
			<basic name="type">
				<column name="resource_type" length="50" />
			</basic>
			<basic name="url">
				<column name="url" length="2048" />
			</basic>
		</attributes>
	</entity>	

	<entity class="com.tpns.article.domain.Keyword">
		<table name="keywords" />
		<attributes>
			<id name="key" access="FIELD">
				<column name="keyword" />
			</id>
			<version name="version" access="FIELD" />
			<many-to-many name="articles">
				<join-table name="article_keywords">
					<join-column name="keyword" />
				</join-table>
			</many-to-many>
		</attributes>
	</entity>

	<entity class="com.tpns.article.domain.Category" name="Category">
		<table name="categories" />
		<named-query name="Category.findByName">
			<query>select c from Category c where c.name=:name</query>
		</named-query>
		<attributes>
			<id name="id" access="FIELD">
				<column name="category_id" updatable="false" />
				<generated-value strategy="SEQUENCE" generator="CATEGORYSEQ" />
				<sequence-generator name="CATEGORYSEQ"
					sequence-name="CATEGORYSEQ" allocation-size="1" />
			</id>
			<basic name="name">
				<column name="category_name" length="255" />
			</basic>
		</attributes>
	</entity>

	<entity class="com.tpns.common.domain.Application">
		<table name="applications" />
		<named-query name="Application.findByIds">
			<query>SELECT app from Application app where app.clientId in (:clientIds)</query>
		</named-query>
		<attributes>
			<id name="id" access="FIELD">
				<column name="application_id" updatable="false" />
			</id>
			<basic name="endpoint">
				<column name="endpoint" length="255" />
			</basic>
			<basic name="clientId">
				<column name="client_id" length="255" />
			</basic>
			<version name="version" access="FIELD" />
		</attributes>
	</entity>

	<entity class="com.tpns.article.domain.ApplicationParameter" cacheable="true">
		<table name="application_parameters" />
		<named-query name="ApplicationParameter.findByKey">
			<query>SELECT param.value from ApplicationParameter param where param.key=:key</query>
		</named-query>
		<attributes>
			<id name="key" access="FIELD">
				<column name="key" updatable="false" />
			</id>
			<basic name="value">
				<column name="value" length="255" />
			</basic>
		</attributes>
	</entity>

	<entity class="com.tpns.article.domain.Audit">
		<table name="audit" />
		<attributes>
			<id name="id" access="FIELD">
				<column name="audit_id" updatable="false" />
				<generated-value strategy="SEQUENCE" generator="AUDITSEQ" />
				<sequence-generator name="AUDITSEQ"
					sequence-name="AUDITSEQ" allocation-size="1" />
			</id>
			<basic name="who" access="FIELD">
				<column name="who" />
			</basic>
			<basic name="what" access="FIELD">
				<column name="what" length="50" />
				<enumerated>STRING</enumerated>
			</basic>
			<basic name="when" access="FIELD">
				<column name="when" nullable="false" insertable="false"
					updatable="false" />
				<temporal>TIMESTAMP</temporal>
			</basic>
		</attributes>
	</entity>

</entity-mappings>