<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<sec:http use-expressions="true"  authentication-manager-ref="authenticationManager" entry-point-ref="basicAuthenticationEntryPoint">
<!-- 		<sec:intercept-url pattern="/logout" access="permitAll" /> -->
<!-- 		<sec:intercept-url pattern="/login" access="permitAll" /> -->
		<sec:intercept-url pattern="/v1/article/published" access="permitAll"  />
		<sec:intercept-url pattern="/v1/article/**" access="hasAuthority('ROLE_AUTHOR')"  />	
<!-- 		<sec:logout logout-success-url="/login?logout" logout-url="/logout" /> -->
		<sec:anonymous enabled="true"  />
		<sec:csrf disabled="true" /> 	
		<sec:custom-filter ref="basicAuthenticationFilter"  position="FORM_LOGIN_FILTER "/>

<!-- 		<sec:http-basic entry-point-ref=""/> -->

<!-- 		<sec:form-login authentication-failure-url="/login?error" 
			login-page="/login" login-processing-url="/login" password-parameter="password"
			username-parameter="username" /> -->

	</sec:http>
	
	<bean id="basicAuthenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="tpns"/>
	</bean>
	
	<bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<constructor-arg ref="authenticationManager"/>
	</bean>

	<sec:authentication-manager id="authenticationManager">
<!-- 		<sec:authentication-provider ref="authenticationProvider"/> -->
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="author" authorities="ROLE_AUTHOR" password="author" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
<!-- 	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService"/>
	</bean>
	
	<bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSource"/>
		<property name="usersByUsernameQuery" value="select username,password,true from users where username = ?"/>
		<property name="authoritiesByUsernameQuery" value="select u.username as username , a.role as authority from users u inner join users_roles a on u.user_id=a.user_id where u.username=?"/>
		<property name="groupAuthoritiesByUsernameQuery" value="select a.role, u.username as username , a.role as authority from users u inner join users_roles a on u.user_id=a.user_id where u.username=?"/>
	</bean> -->

	<sec:global-method-security authentication-manager-ref="authenticationManager"
		jsr250-annotations="enabled" access-decision-manager-ref="accessDecisionManager" />

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.annotation.Jsr250Voter" />
				<bean class="org.springframework.security.access.vote.RoleVoter">
					<property name="rolePrefix" value=""/>
				</bean>
			</list>
		</constructor-arg>
	</bean>


</beans>