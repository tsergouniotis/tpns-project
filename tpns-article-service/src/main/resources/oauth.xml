<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd 
http://www.springframework.org/schema/security/oauth2 
http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

	<!-- resource server configuration -->
	<sec:http pattern="/v1.0/users" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager">
		<sec:intercept-url pattern="/v1.0/users" method="POST"
			access="IS_AUTHENTICATED_FULLY" />
		<sec:anonymous enabled="false" />
		<sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<!-- REST API Endpoints -->
	<sec:http pattern="/v1.0/**" create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint">
		<sec:custom-filter ref="resourceServerFilter"
			before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="tpns" />
		<property name="typeName" value="Basic" />
	</bean>
	
    <bean id="oauthAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="tpns"/>
    </bean>	

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<oauth2:resource-server id="resourceServerFilter"
		token-services-ref="tokenServices" />

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="client-details-service" />
	</bean>
	
    <bean id="corsFilter" class="com.tpns.article.SpringCrossOriginResourceSharingFilter"/>

    <bean id="oauthRestEntryPoint" class="com.tpns.article.OAuthRestEntryPoint"/>	
	
    <!-- The token endpoint See org.springframework.security.oauth2.provider.endpoint.TokenEndpoint-->
    <sec:http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager">
        <sec:anonymous enabled="false"/>
        <sec:csrf disabled="true"/>
        <sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
        <sec:access-denied-handler ref="oauthAccessDeniedHandler"/>
<!--         <sec:custom-filter ref="corsFilter" after="LAST"/> -->
    </sec:http>	

	<sec:authentication-manager alias="userAuthenticationManager">
		<!-- <sec:authentication-provider ref="authenticationProvider"/> -->
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="author" authorities="ROLE_AUTHOR" password="author" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
    <sec:authentication-manager id="clientAuthenticationManager" >
        <sec:authentication-provider user-service-ref="client-details-user-service"/>
    </sec:authentication-manager>
    
    <bean id="client-details-user-service" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="client-details-service" />
    </bean>    

	<oauth2:authorization-server
		client-details-service-ref="client-details-service" token-services-ref="tokenServices">
		<oauth2:refresh-token />
		<oauth2:client-credentials disabled="false"/>
		<oauth2:password />
	</oauth2:authorization-server>

	<oauth2:client-details-service id="client-details-service">
		<oauth2:client client-id="my-trusted-client"
			authorized-grant-types="password,authorization_code,refresh_token,implicit"
			scope="read,write,trust" resource-ids="oauth2-resource"
			access-token-validity="60" authorities="ROLE_AUTHOR" />
		<oauth2:client client-id="my-client-with-registered-redirect"
			authorized-grant-types="authorization_code" scope="read,trust"
			resource-ids="oauth2-resource" authorities="ROLE_AUTHOR"
			redirect-uri="http://anywhere?key=value" />
		<oauth2:client client-id="my-client-with-secret" secret="secret"
			authorized-grant-types="password,client_credentials" scope="read"
			resource-ids="oauth2-resource" access-token-validity="60"
			authorities="ROLE_AUTHOR" />
	</oauth2:client-details-service>

	<!-- Token Store -->
	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

</beans>